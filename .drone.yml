kind: pipeline
type: docker
name: default

# trigger:
#   event:
#   - push
#   branch:
#   - main

steps:
- name: build
  image: alpine
  environment:
    DOCKER_HUB_PASSWORD:
      from_secret: docker_hub_password
  commands:
    - echo "The build number is:"
    - echo $DRONE_BUILD_NUMBER

- name: test
  image: mcr.microsoft.com/dotnet/sdk
  commands:
    - cd UnitTests/
    - dotnet add package coverlet.msbuild
    - cd ..
    - dotnet test /p:CollectCoverage=true /p:CoverletOutput=coverage /p:CoverletOutputFormat=opencover

- name: coveralls
  image: coveralls/coveralls-github-action
  env:
    COVERALLS_REPO_TOKEN: $COVERALLS_REPO_TOKEN

# - name: publish-coverage
#   image: mcr.microsoft.com/dotnet/sdk
#   commands:
#     - dotnet tool install -g coverlet.console
#     - export PATH="$PATH:/root/.dotnet/tools"
#     - coverlet ./UnitTests/bin/**/*.dll --target "dotnet" --targetargs "test --no-build" --format opencover

# - name: test
#   image: mcr.microsoft.com/dotnet/sdk
#   commands:
#     - dotnet test ./UnitTests/UnitTests.csproj --collect:'XPlat Code Coverage' /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

# - name: publish
#   image: coverlet/coverlet
#   commands:
#     - coverlet ./UnitTests/coverage.opencover.xml --target "dotnet" --targetargs "test ./YourTestProject/YourTestProject.csproj --no-build" --format opencover --output ./coverage/

# - name: test
#   image: mcr.microsoft.com/dotnet/sdk
#   commands:
#     - dotnet add package coverlet.collector
#     - dotnet test --logger "trx;LogFileName=test-results.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=coverage

#   # Store a file artifact
# - name: store_artifact
#   image: alpine
#   commands:
#     - echo "Storing artifact..."
#     - echo "This is an artifact file." > /drone/src/artifact.txt
#

# - name: docker
#   image: plugins/docker
#   settings:
#     username: boulundeasv
#     password:
#       from_secret: docker_hub_password
#     repo: boulundeasv/demo-website
#     tags:
#     - latest
#     - ${DRONE_BUILD_NUMBER}
#     - staging 

# artifact:
#   path: /drone/src/artifact.txt

# volumes:
#   - name: shared-data
#     path: /drone/src

# ---

# kind: pipeline
# type: docker
# name: deploy

# trigger:
#   event:
#     - promote

# steps:
# - name: docker
#   image: plugins/docker
#   settings:
#     username: boulundeasv
#     password:
#       from_secret: docker_hub_password
#     repo: boulundeasv/demo-website
#     tags:
#     - production