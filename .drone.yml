kind: pipeline
type: docker
name: integration

trigger:
  event:
    - push
    - custom # trigger from UI
  branch:
    - main

steps:
# - name: build
#   image: mcr.microsoft.com/dotnet/sdk
#   environment:
#     DOCKER_HUB_PASSWORD:
#       from_secret: docker_hub_password
#   commands:
#     - dotnet build

# - name: test
#   image: mcr.microsoft.com/dotnet/sdk
#   commands:
#     - dotnet add UnitTests/UnitTests.csproj package coverlet.msbuild
#     - dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutput=coverage /p:CoverletOutputFormat=opencover

# - name: publish-coverage
#   image: mcr.microsoft.com/dotnet/sdk:6.0 # Using 6.0 by intention since coveralls is not supported by the latest version of dotnet
#   environment:
#     COVERALLS_REPO_TOKEN:
#       from_secret: coveralls_token
#   commands:
#     - dotnet tool install -g coveralls.net
#     - export PATH="$PATH:/root/.dotnet/tools"
#     - csmacnz.Coveralls --opencover -i UnitTests/coverage.opencover.xml --jobId $DRONE_BUILD_NUMBER --commitId $DRONE_COMMIT_SHA --commitBranch $DRONE_COMMIT_BRANCH --commitAuthor "$DRONE_COMMIT_AUTHOR" --commitEmail "$DRONE_COMMIT_AUTHOR_EMAIL" --commitMessage "$DRONE_COMMIT_MESSAGE" --useRelativePaths

# - name: lint
#   image: aosapps/drone-sonar-plugin
#   settings:
#     sonar_host:
#       from_secret: sonar_host
#     sonar_token:
#       from_secret: sonar_token

- name: code-analysis
  image: mcr.microsoft.com/dotnet/sdk
  commands:
    - apt-get install default-jre
    - dotnet tool install --global dotnet-sonarscanner
    - export PATH="$PATH:/root/.dotnet/tools" # We need to make sure that the tool is findable
    - dotnet sonarscanner begin /k:"easv-devops-2024_TeacherPlayground_AY0WtXwFmPh8a7KzfUci" /d:sonar.host.url="http://sonar.setgo.dk:9000"  /d:sonar.token="sqp_c7e79ddcd7138c5a70d76a9ae84f3966b416b740"
    - dotnet build
    - dotnet sonarscanner end /d:sonar.token="sqp_c7e79ddcd7138c5a70d76a9ae84f3966b416b740"

---

kind: pipeline
type: docker
name: delivery
depends_on:
  - integration
    
trigger:
  event:
    - push
    - custom
  branch:
    - main

steps:
- name: docker
  image: plugins/docker
  settings:
    username: boulundeasv
    password:
      from_secret: docker_hub_password
    repo: boulundeasv/demo-website
    tags:
    - latest
    - ${DRONE_BUILD_NUMBER}
    - staging 

---

 kind: pipeline
 type: docker
 name: deployment

 trigger:
   event:
     - promote

 steps:
 - name: docker
   image: plugins/docker
   settings:
     username: boulundeasv
     password:
       from_secret: docker_hub_password
     repo: boulundeasv/demo-website
     tags:
     - production